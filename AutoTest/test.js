//Создание начальной спецификации - тест 1

describe('pow', () => {
    describe('Производится возведение в степень с помощью функции POW', () => {
        // const makeTest = (n) => {
        //     let result = n ** 3

        //     it(`Функция возводит число ${n} в степень 3 равно ${result}`, () => {
        //         assert.equal(pow(n, 3), result)
        //     });
        // }

        // for(let i = 1; i <= 10; i++) {
        //     makeTest(i)
        // }

        it('для отрицательных n возвращает NaN', () => {
            assert.isNaN(pow(5, -3));
        });

        it('для дробных n возвращает NaN', () => {
            assert.isNaN(pow(5, 3.5), 125);
        });
        
        it('возводит 5 в степень 3 равно 125', () => {
            assert.equal(pow(5, 3), 125);
        });

        it('возводит 5 в степень 3 равно 125', () => {
            assert.equal(pow(5, 3), 125);
        });
    
    
        it('возводит 3 в степень 3 равно 27', () => {
            assert.equal(pow(3, 3), 27);
        });
    });
    
   //Создание начальной спецификации - тест 2
    describe('Производится выполнение сложения с помощью функции SUM', () => {
        it('сумма 2  + 3 равна 5', () => {
            assert.equal(sum(2, 3), 5)
        });

        it('сумма 5  + 2 равна 7', () => {
            assert.equal(sum(5, 2), 7)
        });

        it('сумма 11  + 9 равна 20', () => {
            assert.equal(sum(11, 9), 20)
        });
    });

});

